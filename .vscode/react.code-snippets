{
	// Place your timelight-react workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Auto export folder": {
		"prefix": ["expall", "idxexpo", "cmpfldexp"],
		"body": [
			"import ${TM_DIRECTORY/^.+\\/(.*)$/$1/} from \"./${TM_DIRECTORY/^.+\\/(.*)$/$1/}\"",
			"export * from \"./${TM_DIRECTORY/^.+\\/(.*)$/$1/}\"", 
			"export default ${TM_DIRECTORY/^.+\\/(.*)$/$1/}"
		],
		"description": "Create an index for a component folder"
	},
	"React Typescript Component": {
        "prefix": ["rcts"],
        "body": [
          "import React from \"react\"",
          "",
          "export default function $TM_FILENAME_BASE() {",
          "\treturn <div>Hello</div>",
		  "}"
		  
        ],
		"description": "A react function component"
	},
	"React Typescript Wrapper Component": {
        "prefix": ["rctsw"],
        "body": [
          "import React from \"react\"",
          "",
          "export default function $TM_FILENAME_BASE({ children }: { children: AnyChildren }) {",
          "\treturn <div>{children}</div>",
		  "}"
		  
        ],
		"description": "A react function component"
	},
	"Material ui styles": {
		"prefix": ["muistyle"],
		"body": [
		  "import { makeStyles } from \"@material-ui/core\"",
		  "",	  
		  "const useStyle = makeStyles(theme => ({",
		  "  $0: {",
		  "    padding: theme.spacing(2),",
		  "  },",
		  "}))",
		],
		"description": "Create MUI styles"
	},
	"Material ui classes": {
		"prefix": ["muiclasses"],
		"body": [
		  "const classes = useStyle()",
		],
		"description": "Create MUI styles"
	},

	"Material ui className": {
		"prefix": ["muiclassName"],
		"body": [
		  "className={classes.$0}",
		],
		"description": "Create MUI styles"
	},
	"React Component with styles": {
		"prefix": ["rctss"],
		"body": [
		  "import React from \"react\"",
		  "import { makeStyles } from \"@material-ui/core\"",
		  "import { AnyChildren } from \"../react-type-helpers\"", 
		  "",	  
		  "const useStyle = makeStyles(theme => ({",
		  "  root: {",
		  "    padding: theme.spacing(2),",
		  "  },",
		  "}))",
		  "",
		  "export default function $TM_FILENAME_BASE({ children }: { children: AnyChildren }) {",
		  "  const classes = useStyle()",
		  "  return <div className={classes.root}>{children}</div>",
		  "}"
		],
		"description": "A react component with styles setup"
	}
}